% esse arquivo contem o codigo da interface grafica, a chamada para a funcao
% que equaliza oi sinal esta na funcao tocar no final do arquivo
function main()
	fig = createWindow();
	movegui(fig, 'center');
	fig.Visible = 'on';
end


% funcao que cria a janela e coloca os componentes da gui
function fig = createWindow()

	%cria a janela vazia
	fig = figure( ...
		'Name', 'Equalizador Gr√°fico', ...
		'NumberTitle', 'off', ...
		'MenuBar', 'none', ...
		'Visible', 'off', ...
		'Position', [0 0 400 300] ...
	);

	% cria o painel do equalizador
	panel = uipanel( ...
		'Units', 'pixels', ...
		'Position', [50 20 fig.Position(3)-100 200]);

	%prealocando o vetor que contem os handles para os sliders:
	sliders = gobjects(1, 2);
	%prealocando o vetor que contem os textos dos sliders:
	freqTexts = gobjects(1, 2);
	%strings que os textos terao:
	freqTextStrings = {'Bass', 'Treble'};
	% strings dos ganhos:
	gainTexts = gobjects(1, 2);
	dBTexts = gobjects(1, 2);
	% esse for cria os 10 sliders do eq grafico
	for i=1:2
		sliders(i) = uicontrol( ...
			'Style', 'slider', ...
			'Parent', panel, ...
			'Position', [80+120*(i-1) 10 20 150], ...
			'Callback', @sliderCallback, ...
			'Tag', num2str(i), ...
			'Min', -12, ...
			'Max', 12, ...
			'Value', 0 ...
		);

		freqTexts(i) = uicontrol( ...
			'Style', 'text', ...
			'Parent', fig, ...
			'Position', [panel.Position(1)+60+120*(i-1) 5 60 15], ...
			'String', freqTextStrings{i} ...
		);

		gainTexts(i) = uicontrol( ...
			'Style', 'text', ...
			'Parent', panel, ...
			'Position', [75+120*(i-1) 170 30 20], ...
			'String', '0', ...
			'BackgroundColor', [1 1 1] ...
		);

		dBTexts(i) = uicontrol( ...
			'Style', 'text', ...
			'Parent', panel, ...
			'Position', [105+120*(i-1) 170 20 15], ...
			'String', 'dB' ...
		);
	end

	%cria o botao de selecionar musica
	loadButton = uicontrol( ...
		'Style', 'pushbutton', ...
		'Parent', fig, ...
		'Position', [50 fig.Position(4)-45 100 30], ...
		'String', 'Carregar', ...
		'Callback', @loadButtonCallback ...
	);

	%cria botao de play
	uicontrol( ...
		'Style', 'pushbutton', ...
		'Parent', fig, ...
		'Position', [250 fig.Position(4)-45 100 30], ...
		'String', 'Tocar', ...
		'Callback', @playButtonCallback ...
	);

	% botao de reset
	uicontrol( ...
		'Style', 'pushbutton', ...
		'Parent', fig, ...
		'Position', [fig.Position(3)-40 fig.Position(4)-100 40 20], ...
		'String', 'Reset', ...
		'Callback', @resetButtonCallback ...
	);

	%cria texto que diz a musica atual
		uicontrol( ...
			'Style', 'text', ...
			'Parent', fig, ...
			'Position', [10 fig.Position(4)-70 100 20], ...
			'String', 'Arquivo Atual:' ...
		);
		nomeArq = uicontrol( ...
			'Style', 'text', ...
			'Parent', fig, ...
			'Position', [110 fig.Position(4)-70 600 20], ...
			'String', 'nenhum', ...
			'HorizontalAlignment', 'left' ...
		);

	%callbacks:
	function loadButtonCallback(loadButton, ~)
		% abre janela de selecionar arquivo:
		[fileName, pathName] = uigetfile('*.wav', 'Selecione um arquivo .wav');

		completeFileName = [pathName fileName];
		% se o arquivo for valido:
		if(~isnumeric(fileName) && ~isnumeric(pathName))
			%carregar o arquivo
			[sinal, Fs] = audioread(completeFileName);
			% Fs = taxa de amostragem

			% armazena as informacoes no botao:
			loadButton.UserData = struct('sinal', sinal, 'Fs', Fs);

			% atualiza o arquivo selecionado:
			nomeArq.String = fileName;
		end
	end

	function playButtonCallback(playButton, ~)
		if(~isempty(loadButton.UserData))
			sinal = loadButton.UserData.sinal;
			Fs = loadButton.UserData.Fs;

			tocar(sinal, Fs, [sliders.Value], playButton);
		end
	end

	function sliderCallback(slider, ~)
		ganho = num2str(slider.Value);
		sliderNumber = str2double(slider.Tag);
		gainTexts(sliderNumber).String = ganho;
	end

	function resetButtonCallback(~, ~)
		set(sliders, 'Value', 0);
		set(gainTexts, 'String', '0');
	end
end

function tocar(sinal, Fs, ganhos, playButton)
	% funcao onde finalmente ocorre a equalizacao
	sinalEqualizado = controleTom2Botoes(Fs, sinal, ganhos);

	player = audioplayer(sinalEqualizado, Fs);
	playButton.UserData = player;

	player.play();
end